<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>rayanon</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2017-11-03T03:50:00+05:30</updated><entry><title>On writing</title><link href="/on-writing.html" rel="alternate"></link><published>2017-11-03T03:50:00+05:30</published><updated>2017-11-03T03:50:00+05:30</updated><author><name>Anon Ray</name></author><id>tag:None,2017-11-03:/on-writing.html</id><summary type="html">&lt;p&gt;I want to write. But I don&amp;#8217;t know what or how. I think, I am not well versed or
have good command over the English language, in terms of vocabulary and grammar.
I am scared that I will make mistakes. But a wise man once said &amp;#8220;You have to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I want to write. But I don&amp;#8217;t know what or how. I think, I am not well versed or
have good command over the English language, in terms of vocabulary and grammar.
I am scared that I will make mistakes. But a wise man once said &amp;#8220;You have to
lose your fear of being wrong to be creative.&amp;#8221; So conquering all my fears today,
I have set down to write. But I don&amp;#8217;t know what to write about, I don&amp;#8217;t have
anything in mind, really. This brings me to my second fear of writing - content.
The Inspiration. Sometimes, I itch to write, but I don&amp;#8217;t know what to write
about. It would be wrong to say that I don&amp;#8217;t have any ideas or I am not thinking
about anything. Ideas are streaming in my mind continously like atoms falling in
from the surface of any matter to deep inside of it and back, or water bubbles
that contiously drift from the surface of the water to deep down and back.
Thoughts about humanity, society, love, life, the earth, the universe and
everything else is continously ravaging inside me, unconditionally. Yet, I don&amp;#8217;t
usually feel the emotion, the urge to express it out&amp;nbsp;there.&lt;/p&gt;
&lt;!--
The Inspiration is always inspiring to continously strive to be inspired.
Inspired by the music, by the wind, the sun and the moon, inspired by people and
so many other forces of this universe. Inspiration for hope, peace and love.
Inspiration to be free.
--&gt;

&lt;p&gt;I still don&amp;#8217;t know what to write about. Even if I cook up something to write on,
what about the expression in my writing? What if it is hillarious or too
childish? What if it is too confusing and there is no clarity in my&amp;nbsp;writing?&lt;/p&gt;
&lt;p&gt;Hopefully, you can now understand what a writer has to go through even before he
starts writing&amp;nbsp;anything.&lt;/p&gt;
&lt;p&gt;I think writing is an enourmous creative effort. First, you have to find some
interesting thing to write about. Then you have do all necessary research,
sketch an abstract outline in your mind of how the writing you want to be, and
then put words to express the interesting thing you had to write about.  Often
is the case when after finishing, you don&amp;#8217;t get the kind of language or tone or
mood you initially wanted the writing to&amp;nbsp;have.&lt;/p&gt;
&lt;p&gt;So, you go back and read the whole writing, editing to make it more like the
way you wanted. From a spark of an idea to completed work of excellent art
needs a lot of care, effort and dedication which is illustrated by the writer&amp;#8217;s
passion towards his writing. Long story short, its not easy to write anything
which can move a person deeply, change his life, or remain very much
contemporary even after hundreds of years after its&amp;nbsp;creation.&lt;/p&gt;
&lt;p&gt;Its same for all forms of art as&amp;nbsp;well.&lt;/p&gt;
&lt;p&gt;Its 3 &lt;span class="caps"&gt;AM&lt;/span&gt;, and I am typing frantically at my keyboard, its the only sound I can
hear. I don&amp;#8217;t know what to write about or how to go about writing, yet I have
typed out around 30 odd lines without thinking anything. I guess its just coming
out. Sometimes the Inspiration can be very powerful. Sometimes when that
Inspiration is peeping from inside of you to come out, or comes and sits beside
and asks you &amp;#8220;What&amp;#8217;s up?&amp;#8221;. Words just start flowing from your mind ceaselessly.
You run to grab something so that you can hold them. Then you don&amp;#8217;t really need
to think. Words come out of you straight to the paper. It feels so exhilarating.
Its truly speaking your mind. And then many of them go on to become legacies and&amp;nbsp;sermons.&lt;/p&gt;
&lt;p&gt;The key is to keep being inspired and the music will come to&amp;nbsp;you.&lt;/p&gt;</content><category term="random"></category><category term="blogging"></category></entry><entry><title>Backup strategies on Postgres</title><link href="/postgres-backup.html" rel="alternate"></link><published>2017-03-25T04:08:00+05:30</published><updated>2017-03-25T04:08:00+05:30</updated><author><name>Anon Ray</name></author><id>tag:None,2017-03-25:/postgres-backup.html</id><summary type="html">&lt;p&gt;If you are using any database in production you should always have backups.
Servers can crash, disks can fail, data can get corrupted, people can make
mistakes; a lot of failures can happen with the production instance. Hence it
is extremely important to have backups on a production&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you are using any database in production you should always have backups.
Servers can crash, disks can fail, data can get corrupted, people can make
mistakes; a lot of failures can happen with the production instance. Hence it
is extremely important to have backups on a production&amp;nbsp;system.&lt;/p&gt;
&lt;p&gt;In this post I&amp;#8217;m going to discuss various backup options that are available on
&lt;a href="https://postgresql.org"&gt;PostgreSQL&lt;/a&gt; and the various ways one can configure taking backups of the
database in production. I&amp;#8217;ll also discuss in what situation what kind of
backups are more&amp;nbsp;useful.&lt;/p&gt;
&lt;p&gt;First, let&amp;#8217;s look at the various backup options available in&amp;nbsp;Postgres:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Logical&amp;nbsp;backups&lt;/li&gt;
&lt;li&gt;Physical&amp;nbsp;backups&lt;/li&gt;
&lt;li&gt;Continuous&amp;nbsp;backups&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let&amp;#8217;s look at each of these&amp;nbsp;below.&lt;/p&gt;
&lt;h3&gt;Logical&amp;nbsp;backups&lt;/h3&gt;
&lt;p&gt;Logical backups are dumps of &lt;span class="caps"&gt;SQL&lt;/span&gt; statements which describe the state of the
database. They can be obtained using a tool like &lt;code&gt;pg_dump&lt;/code&gt;. These dump files
are just &lt;span class="caps"&gt;SQL&lt;/span&gt; files. Hence, they can be imported to another postgres instance
using &lt;code&gt;psql&lt;/code&gt; normally. It is usually a good idea to take one logical backup
before altering schema or migrating a&amp;nbsp;database.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ pg_dump -U admin -h db.example.com mydatabase &amp;gt; dump.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The file &lt;code&gt;dump.sql&lt;/code&gt; is your backup. To recover it, run this in another&amp;nbsp;database:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ psql -U admin -h db2.example.com mydatabase &amp;lt; dump.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;code&gt;-U&lt;/code&gt; takes the postgres username. Port can also be specified via &lt;code&gt;-p&lt;/code&gt;.&lt;/p&gt;
&lt;h3&gt;Physical&amp;nbsp;backups&lt;/h3&gt;
&lt;p&gt;Physical backups are backups via the filesystem. Meaning they can be snapshots
of the filesystem itself, or they could be just copies of the Postgres
database&amp;#8217;s data directory. The entire database instance&amp;#8217;s state is stored in
Postgres&amp;#8217; data directory; which is usually &lt;code&gt;/var/lib/postgresql/&amp;lt;VERSION&amp;gt;/data&lt;/code&gt;
on *nix&amp;nbsp;machines.&lt;/p&gt;
&lt;p&gt;You can use &lt;code&gt;rsync&lt;/code&gt; to periodically take backup of this data directory, and
then store the backup&amp;nbsp;elsewhere.&lt;/p&gt;
&lt;p&gt;As an&amp;nbsp;example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ tar czf mydb-pgdata-21022017-1803.tar.gz  /var/lib/postgresql/9.6/data
$ rsync --progress --partial --recursive mydb-pgdata-21022017-1803.tar.gz &lt;span class="se"&gt;\&lt;/span&gt;
    backup@backup-server.example.com:/vol/pgdata_backups/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We first make a compressed (gzipped) tarball of the data directory, and then
use &lt;code&gt;rsync&lt;/code&gt; to copy the files to our backup&amp;nbsp;server.&lt;/p&gt;
&lt;h3&gt;Continuous&amp;nbsp;backups&lt;/h3&gt;
&lt;p&gt;Continuous backups are an advanced feature of Postgres. Postgres database has
this design where it first commits a transaction a file on the disk, called the
Write-ahead Log (or &lt;span class="caps"&gt;WAL&lt;/span&gt;), and waits for the data to be actually written to the
disk; and only then commits the transaction to the current database object.
This way even if a Postgres server crashes in the middle of a transaction, it
will never have inconsistent state and when it recovers it can replay the &lt;span class="caps"&gt;WAL&lt;/span&gt;
to arrive at the state it was when it&amp;nbsp;crashed.&lt;/p&gt;
&lt;p&gt;If you think about it, this amazing &lt;span class="caps"&gt;WAL&lt;/span&gt; design results in a uber-amazing backup
system. These &lt;span class="caps"&gt;WAL&lt;/span&gt; logs can simply copied or streamed over to another machine
where&amp;nbsp;-&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it can be kept as a backup - and this enables us to recover a Postgres
   database in any point in time. Just ask Postgres replay to that point in the
   &lt;span class="caps"&gt;WAL&lt;/span&gt; where you fancy. This also called a Point-in-time recovery (&lt;span class="caps"&gt;PITR&lt;/span&gt;) in &lt;span class="caps"&gt;DB&lt;/span&gt;&amp;nbsp;world.&lt;/li&gt;
&lt;li&gt;it can be replayed to a secondary Postgres instance and then this instance
   can be used as a slave, a replicated instance, a backup or even a secondary
   read-only&amp;nbsp;instance.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Using the &lt;span class="caps"&gt;WAL&lt;/span&gt;, a lot of interesting things can be done like streaming
replication, hot standby failover instance, read-only slaves and few more.
Maybe I will write about these interesing bits in a future&amp;nbsp;post.&lt;/p&gt;
&lt;p&gt;Configuring continous backups is little more involved and probably will require
its own post and hence I will not cover configuration of continous backups
here. You can search about it on the internet. But I can suggest using &lt;a href="https://github.com/wal-e/wal-e"&gt;&lt;span class="caps"&gt;WAL&lt;/span&gt;-E&lt;/a&gt;,
which is a fantastic tool that makes setting up continous backup very easy.
Once you install and configure &lt;span class="caps"&gt;WAL&lt;/span&gt;-E it can stream your backup files to S3,
Google bucket, Azure&amp;nbsp;etc.&lt;/p&gt;
&lt;h3&gt;But which backup to use&amp;nbsp;where?&lt;/h3&gt;
&lt;p&gt;Now, the natural next question is which backup method to use. Should someone
use all the possible methods, or sticking to one method is good&amp;nbsp;enough?&lt;/p&gt;
&lt;p&gt;It can be confusing or daunting to look at so many options. Hence, I&amp;#8217;m here to
nudge you in the right direction with the right ideas. But don&amp;#8217;t take my ideas
for granted. Do your own research, think through your problems, and come up
with your own&amp;nbsp;conclusion.&lt;/p&gt;
&lt;p&gt;Almost in all situations continuous backup makes sense. It offers a streaming,
continuous backup of your production database and it also offers
Point-in-time-recovery. &lt;span class="caps"&gt;PITR&lt;/span&gt; can be very valuable, because it let&amp;#8217;s you specify
a timestamp and recover to it. Although, setting up backup and recovery
mechanism in this method is little more complicated - as there can be few edge
cases, specially regarding the process you will adapt to do recovery. Hence,
this method requires a bit of planning and hence takes more effort overall. But
probably also pays the best in the long&amp;nbsp;run.&lt;/p&gt;
&lt;p&gt;Filesystem level backups are error-prone, there is no guarantee that you get a
consistent snapshot. What if the moment when you were taking the snapshot of
the underlying filesystem, the database decided to write some new data. There
is no way for you to control that. Also by moving around the filesystem for our
backups, we are essentially not leveraging what the database can do for us.
Hence, for most of the cases filesystem backups can be ignored. If you are
really paranoid and want to keep redundant backups, sure go ahead and setup a
cronjob to rsync your &lt;span class="caps"&gt;PGDATA&lt;/span&gt; directory somewhere&amp;nbsp;safe. &lt;/p&gt;
&lt;p&gt;Logical backups give you a logical snapshot of your database. Logical snapshots
are tremendously useful if you are migrating your database. Its always a good
idea when you are migrating a schema, that you take a logical backup before
migrating. It is also useful for debugging purposes. You can look at two
different logical dumps and compare them to figure out data discrepancies.
It&amp;#8217;s not a bad idea to add a cronjob which takes a &lt;code&gt;pg_dump&lt;/code&gt; periodically,
along with your continuous backup configuration. That way you have a logical
snapshot of your database and you have redundant backups. Win-win&amp;nbsp;situation!&lt;/p&gt;
&lt;p&gt;On closing note, another important aspect of database backup and recovery
process is to always validate and check that current backups are happening and
are working - i.e from existing backups database can be recovered. In the light
of the recent Gitlab incident this has become even more apparent, that systems
fail and assumptions don&amp;#8217;t hold true always. Do not rely on the fact that you
have setup the system correctly 2 years back. As an &lt;span class="caps"&gt;DBA&lt;/span&gt; or admin it is not just
enough to setup a backup system, one should regularly monitor the backups and
also perform periodic drills, where they take one of the latest backups and try
to recover from&amp;nbsp;it.&lt;/p&gt;
&lt;p&gt;Backup systems are generally long running systems and people usually forget
about them right after configuring them; because they do not need to touch that
system in a long time. But eventually the day comes when they have recover from
the backups, and they can only hope that their backups are safe and somehow
magically working even if they have gone throuhg system/software failures,
hardware failure, data corruption and what&amp;nbsp;not.&lt;/p&gt;
&lt;p&gt;Hence knowing the status of the backups can make the difference of a world to
the application because after all the most important part of any application is
the&amp;nbsp;database.&lt;/p&gt;</content><category term="postgres"></category><category term="backups"></category><category term="sysadmin"></category></entry><entry><title>Rubbish</title><link href="/writing-dopamine.html" rel="alternate"></link><published>2017-02-20T19:30:00+05:30</published><updated>2017-02-20T19:30:00+05:30</updated><author><name>Anon Ray</name></author><id>tag:None,2017-02-20:/writing-dopamine.html</id><summary type="html">&lt;p&gt;Hello, I&amp;#8217;m writing some notes here. I see a complete white screen infront of
me, which is supposed to give me a distraction-free writing experience. But I&amp;#8217;m
not sure if this is entirely true that it happens. For example, when I looked
at the screen it kind of …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello, I&amp;#8217;m writing some notes here. I see a complete white screen infront of
me, which is supposed to give me a distraction-free writing experience. But I&amp;#8217;m
not sure if this is entirely true that it happens. For example, when I looked
at the screen it kind of felt awkward that its completely white and now I have
to surrender myself to the serene feeling of white and transcend to a higher
level to get some inspiration for my writing. But I also see a point that when
someone has already some idea on what to write about, when they see the
complete white screen they can concentrate on their mind and the just the words
that flow out of their fingers into this screen which might obviously be a very
good writing experience, to the point it is almost a dopamine trip I&amp;nbsp;suppose.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;span class="caps"&gt;PS&lt;/span&gt;: This was written while trying out a new note taking app. After writing it
out, I thought of posting it&amp;nbsp;here.&lt;/p&gt;</content><category term="random"></category><category term="dopamine"></category></entry><entry><title>The story of my first log</title><link href="/first-log.html" rel="alternate"></link><published>2016-02-09T14:17:00+05:30</published><updated>2016-02-09T14:17:00+05:30</updated><author><name>Anon Ray</name></author><id>tag:None,2016-02-09:/first-log.html</id><summary type="html">&lt;p&gt;Boring story of why I started this&amp;nbsp;blog&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;This is a very boring story of why I started this blog. Please read it at your
own&amp;nbsp;risk!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="To blog or not to blog" class="center-img" src="/images/to-blog-or-not-to-blog.png"&gt;&lt;/p&gt;
&lt;p&gt;Around 2004-2009 netizens (or citizens of the Internet) became quite obsessed
with something called blog. Blog is a truncation of the expression web log.
Which essentially means a log of yourself on the World Wide Web. Blogs became
hugely popular, where individuals published their own website with their own
personal opinions or biased/unbiased, correct/incorrect information. All was
well and blogs were&amp;nbsp;thriving.&lt;/p&gt;
&lt;p&gt;But since 2009, individual website publishing saw a drop and more people
flocked to larger platforms for blogging, established by companies which
offered them ease of getting started to publish content; while sacrificing the
freedom and flexibility that came with individual website publishing.
Eventually, even larger companies got established, and they changed the way
people used to blog by offering proprietary ways of publishing content: like
via a tweet or via a post, which forces the user to write and format the
content according to their pre-defined template of a tweet/post. This was the
boom of social networks, and people could express how much they wanted with
photographs, selfies and their own day-to-day activities; which became less
artistic and more competitive (because people cared less of what and how they
are expressing, and more on the quantity of posts and likes and comments and
such). So a lot of people consider that was the death of&amp;nbsp;blogging.&lt;/p&gt;
&lt;p&gt;But people in the world of software were already writing blogs since the birth
of the World Wide Web; and they kept maintaining their own blogs even after
bigger publishing platforms took over the majority of blogging population.
These people were mostly web developers, and other software engineers who knew
the basics of web publishing - that is running one&amp;#8217;s own website, hosting etc.
Even if they were not managing their own hosting, they probably had an
independent blog on managed infrastructure, and refrained from migrating
entirely to any MegaCorp Inc. publishing platforms.  So, in short, if you are
person in &lt;em&gt;tech&lt;/em&gt;, you probably run your own&amp;nbsp;blog.&lt;/p&gt;
&lt;p&gt;Not me. Even after being in the world of software and working as a web
developer for quite sometime, I have never had a blog. I, simply, never felt the
need of it. Not that I don&amp;#8217;t have an expressive voice in my head which wants to
speak out and thwart some people, or ramble about some totally irrelevant,
pointless topic from time to time; but I never really got the urge to really
write up something and put it out there. I rarely post Facebook updates about
something that is going through my mind or something that I want to talk about.
Many things that I do want to talk about, say to a larger audience, even if
that is something which most people don&amp;#8217;t talk about, they are already neat and
snappy memes shared hundreds of times on Facebook, so I just reshare them. I
sometimes tweet about things which are small, mostly news, on twitter; and
maybe some interesting quote some&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Then why did I choose to start my own web log or blog? The story behind it is
completely orthogonal to a regular person&amp;#8217;s motivation to start a blog, typical me.
Recently, I came across this static site generator called
&lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt; which is a very popular and well known static
generators in the &lt;em&gt;hacker&lt;/em&gt; world and the world of &lt;a href="https://python.org"&gt;Python&lt;/a&gt;.
I have heard of this before and looked into before, but I never paid much
attention to it. But I don&amp;#8217;t remember how, I just stumbled across this static
site generator few days back. And since then I have been toy-ing with the idea
to use Pelican, write some totally random crap, and put up some content on any
of the dirt cheap cloud hosting providers or even publish to Github pages for
free! So that&amp;#8217;s the story behind starting my blog: to try out &lt;strong&gt;Pelican&lt;/strong&gt;!&lt;/p&gt;
&lt;p&gt;So if you are a programmer, developer or software engineer, and do not have a
blog yet, and have been etching to start your own blog - I highly recommend
&lt;a href="http://getpelican.com"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Said all of the above and have started a blog, I plan to continue this blog.  I
don&amp;#8217;t know yet what I&amp;#8217;ll be posting or writing here, I think that will become
more clear with&amp;nbsp;time.&lt;/p&gt;
&lt;p&gt;Let&amp;#8217;s see where this goes from&amp;nbsp;here!&lt;/p&gt;</content><category term="random"></category><category term="blogging"></category><category term="history"></category></entry><entry><title>Hello World</title><link href="/hello-world.html" rel="alternate"></link><published>2016-02-08T21:10:00+05:30</published><updated>2016-02-08T21:10:00+05:30</updated><author><name>Anon Ray</name></author><id>tag:None,2016-02-08:/hello-world.html</id><summary type="html">&lt;p&gt;Hello&amp;nbsp;world&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Hello&amp;nbsp;World!&lt;/h1&gt;
&lt;p&gt;The customary Hello World from a programmer. Even on his&amp;nbsp;blog.&lt;/p&gt;</content><category term="random"></category></entry></feed>